//----------------Pseudocode
Function quickSort(a, l, r):
    if l < r:
        pivotIndex = partition(a, l, r)
        quickSort(a, l, pivotIndex - 1)
        quickSort(a, pivotIndex + 1, r)

Function partition(a, l, r):
    pivot = a[r]    // choose last element as pivot
    i = l - 1

    for j from l to r - 1:
        if a[j] < pivot:
            i = i + 1
            swap a[i] with a[j]

    swap a[i + 1] with a[r]
    return i + 1


//------------- Algorithm: QUICK_SORT(a, l, r)

Input: Array a, left index l, right index r
Output: Sorted array a

1. if l < r then
2.     pivotIndex = PARTITION(a, l, r)
3.     QUICK_SORT(a, l, pivotIndex - 1)
4.     QUICK_SORT(a, pivotIndex + 1, r)


----

Algorithm: QUICK_SORT(a, l, r)
1. if l < r then
2.     pivotIndex ← PARTITION(a, l, r)
3.     QUICK_SORT(a, l, pivotIndex - 1)
4.     QUICK_SORT(a, pivotIndex + 1, r)
